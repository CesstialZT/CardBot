
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
    @import url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@300&family=Quicksand:wght@300&display=swap');
    
    :root {
        --primary: #5a86bf;
        --text: #ccc;
        --dark: #222;
        --dark-2: #3b3b3b;
    }
    
    * {
        font-family: "Quicksand", Arial, Helvetica, sans-serif;
        box-sizing: border-box;
    }
    
    body {
        background-color: var(--dark);
        color: var(--text);
        font-weight: 800;
        font-size: 1em;
    }
    
    header {
        position: fixed;
        background-color: var(--primary);
        top: 0;
        left: 0;
        height: 4em;
        width: 100%;
    }
    
    header h1 {
        height: 100%;
        max-height: 100%;
        text-align: center;
        margin: 10px;
    }
    
    .counters {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1rem;
        text-align: center;
        margin: 20vh 0;
        font-size: .9em;
    }
    
    .counters li {
        list-style-type: none;
    }
    
    .counters ul li span {
        font-size: 4em;
    }
    
    .table-container {
        border-collapse: collapse;
        margin: 20vh auto;
        font-size: .9em;
        min-width: 80vw;
        overflow: hidden;
    }
    
    .table-container thead tr {
        background-color: var(--primary);
        text-align: left;
        font-weight: bold;
    }
    
    .table-container th,
    .table-container td {
        padding: 20px 15px;
    }
    
    .table-container tbody tr {
        border-bottom: 1px solid var(--dark-2);
    }
    
    .table-container tbody tr:last-child {
        border-bottom: 3px solid var(--primary);    
    }
    
    .table-container tbody tr:hover {
        background-color: var(--dark-2);
    }
    
    .table-container tbody tr.is-active {
        background-color: #f3f3f3;
        color: var(--primary);
        font-weight: bold;
    }
    </style>

    <title>Leaderboard</title>
</head>
<body>

    <header>
        <h1>Leaderboard</h1>
    </header>

    <div class="counters">
        <div class="users">
            <ul>
                <li><span class="num">0</span></li>
                <li>Users</li>
            </ul>
        </div>
        <div class="netw">
            <ul>
                <li><span class="num">0</span></li>
                <li>Total Net Worth</li>
            </ul>
        </div>
    </div>

    <table class="table-container">
        <thead>
            <tr>
                <th>Rank</th>
                <th>Username</th>
                <th>Cash</th>
                <th>Bank</th>
                <th>Net Worth</th>
            </tr>
        </thead>
        <tbody id="table">
            
        </tbody>
    </table>
</body>
<script>

fetch('<%= BASE_URL %>' + 'fetchUsers')
.then((res) => res.json())
.then((data) => {
  // Value Counters
  const amountOfUsers = data.length;
  let totalNetworth = 0;
  data.forEach((element) => totalNetworth += element.fields.Networth);
  
  const valueDisplays = document.querySelectorAll('.num');
  const interval = 5000; // 5 Seconds
  
  valueDisplays.forEach((valueDisplay, index) => {
    let startValue = 0;
    const endValue = index == 0 ? amountOfUsers : totalNetworth;
    
    let duration = Math.floor(interval / endValue);
    function updateCounter () {
      const increment = endValue / 250;
      const c = +valueDisplay.innerText;
      
      startValue += 1;
      valueDisplay.textContent = startValue;
      
      if (c < endValue) {
        valueDisplay.innerText = `${Math.ceil(c + increment)}`;
        setTimeout(updateCounter, 1)
      }
      else {
        valueDisplay.innerText = endValue;
      }
    };
    updateCounter();
  });
  
  // Fill The Table With Data
  const buildTable = (Data) => {
    const table = document.getElementById('table');
    Data.forEach((element, index) => {
    
      const row = [
        `<tr>`,
          `<td>${index + 1}</td>`,
          `<td>${element.fields.Username}</td>`,
          `<td>${element.fields.Cash}</td>`,
          `<td>${element.fields.Bank}</td>`,
          `<td>${element.fields.Networth}</td>`,
        `</tr>`,
      ].join('\n')
  
      table.innerHTML += row;
    });
  };
  
  buildTable(data);
});

</script>
</html>